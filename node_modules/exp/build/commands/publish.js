'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.action = undefined;

var _regenerator;

function _load_regenerator() {
  return _regenerator = _interopRequireDefault(require('babel-runtime/regenerator'));
}

var _asyncToGenerator2;

function _load_asyncToGenerator() {
  return _asyncToGenerator2 = _interopRequireDefault(require('babel-runtime/helpers/asyncToGenerator'));
}

var action = exports.action = function () {
  var _ref = (0, (_asyncToGenerator2 || _load_asyncToGenerator()).default)((_regenerator || _load_regenerator()).default.mark(function _callee(projectDir) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var status, startedOurOwn, recipient, result;
    return (_regenerator || _load_regenerator()).default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return (_xdl || _load_xdl()).Project.currentStatus(projectDir);

          case 2:
            status = _context.sent;
            startedOurOwn = false;

            if (!(status !== 'running')) {
              _context.next = 10;
              break;
            }

            (0, (_log || _load_log()).default)('Unable to find an existing exp instance for this directory, starting a new one...');
            (0, (_exit || _load_exit()).installExitHooks)(projectDir);
            _context.next = 9;
            return (_xdl || _load_xdl()).Project.startAsync(projectDir, {}, !options.quiet);

          case 9:
            startedOurOwn = true;

          case 10:
            _context.next = 12;
            return (_sendTo || _load_sendTo()).default.getRecipient(options.sendTo);

          case 12:
            recipient = _context.sent;

            (0, (_log || _load_log()).default)('Publishing...');

            if (options.quiet) {
              (_simpleSpinner || _load_simpleSpinner()).default.start();
            }

            _context.next = 17;
            return (_xdl || _load_xdl()).Project.publishAsync(projectDir);

          case 17:
            result = _context.sent;


            if (options.quiet) {
              (_simpleSpinner || _load_simpleSpinner()).default.stop();
            }

            (0, (_log || _load_log()).default)('Published');
            (0, (_log || _load_log()).default)('Your URL is\n\n' + (_crayon || _load_crayon()).default.underline(result.url) + '\n');
            (_log || _load_log()).default.raw(result.url);

            if (!recipient) {
              _context.next = 25;
              break;
            }

            _context.next = 25;
            return (_sendTo || _load_sendTo()).default.sendUrlAsync(result.url, recipient);

          case 25:
            if (!startedOurOwn) {
              _context.next = 28;
              break;
            }

            _context.next = 28;
            return (_xdl || _load_xdl()).Project.stopAsync(projectDir);

          case 28:
            return _context.abrupt('return', result);

          case 29:
          case 'end':
            return _context.stop();
        }
      }
    }, _callee, this);
  }));

  return function action(_x) {
    return _ref.apply(this, arguments);
  };
}();

var _crayon;

function _load_crayon() {
  return _crayon = _interopRequireDefault(require('@ccheever/crayon'));
}

var _simpleSpinner;

function _load_simpleSpinner() {
  return _simpleSpinner = _interopRequireDefault(require('@exponent/simple-spinner'));
}

var _xdl;

function _load_xdl() {
  return _xdl = require('xdl');
}

var _log;

function _load_log() {
  return _log = _interopRequireDefault(require('../log'));
}

var _sendTo;

function _load_sendTo() {
  return _sendTo = _interopRequireDefault(require('../sendTo'));
}

var _exit;

function _load_exit() {
  return _exit = require('../exit');
}

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (program) {
  program.command('publish [project-dir]').alias('p').description('Publishes your project to exp.host').option('-q, --quiet', 'Suppress verbose output from the React Native packager.').option('-s, --send-to [dest]', 'A phone number or e-mail address to send a link to').allowNonInteractive().asyncActionProjectDir(action);
};
//# sourceMappingURL=../__sourcemaps__/commands/publish.js.map
