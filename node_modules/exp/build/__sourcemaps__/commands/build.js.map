{"version":3,"sources":["commands/build.js"],"names":["program","command","alias","option","description","allowNonInteractive","asyncActionProjectDir","projectDir","options","iosBuilder","androidBuilder","builder","checkStatus"],"mappings":";;;;;;;;;;;;;;;;;;;;AAIA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;kBAEe,UAACA,OAAD,EAAkB;AAC/BA,UACGC,OADH,CACW,yBADX,EAEGC,KAFH,CAES,IAFT,EAGGC,MAHH,CAGU,yBAHV,EAGqC,2BAHrC,EAIGC,WAJH,CAKI,kGALJ,EAOGC,mBAPH,GAQGC,qBARH,CAQyB,UAACC,UAAD,EAAaC,OAAb,EAAyB;AAC9C,QAAMC,aAAa,gDAAeF,UAAf,EAA2BC,OAA3B,CAAnB;AACA,WAAOC,WAAWR,OAAX,EAAP;AACD,GAXH;;AAaAD,UACGC,OADH,CACW,6BADX,EAEGC,KAFH,CAES,IAFT;AAGE;AACA;AACA;AALF,GAMGE,WANH,CAOI,oGAPJ,EASGC,mBATH,GAUGC,qBAVH,CAUyB,UAACC,UAAD,EAAaC,OAAb,EAAyB;AAC9C,QAAME,iBAAiB,wDAAmBH,UAAnB,EAA+BC,OAA/B,CAAvB;AACA,WAAOE,eAAeT,OAAf,EAAP;AACD,GAbH;;AAeAD,UACGC,OADH,CACW,4BADX,EAEGC,KAFH,CAES,IAFT,EAGGE,WAHH,qFAMGC,mBANH,GAOGC,qBAPH;AAAA,gIAOyB,iBAAOC,UAAP,EAAmBC,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AACfG,qBADe,GACL,kDAAgBJ,UAAhB,EAA4BC,OAA5B,CADK;AAAA;AAAA;AAAA,qBAGNG,QAAQC,WAAR,CAAoB,KAApB,CAHM;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA,oBAKf,kEALe;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAPzB;;AAAA;AAAA;AAAA;AAAA;AAkBD,C","file":"../../commands/build.js","sourcesContent":["/**\n * @flow\n */\n\nimport BaseBuilder from './build/BaseBuilder';\nimport IOSBuilder from './build/IOSBuilder';\nimport AndroidBuilder from './build/AndroidBuilder';\nimport BuildError from './build/BuildError';\n\nexport default (program: any) => {\n  program\n    .command('build:ios [project-dir]')\n    .alias('bi')\n    .option('-c, --clear-credentials', 'Clear stored credentials.')\n    .description(\n      'Build a standalone IPA for your project, signed and ready for submission to the Apple App Store.'\n    )\n    .allowNonInteractive()\n    .asyncActionProjectDir((projectDir, options) => {\n      const iosBuilder = new IOSBuilder(projectDir, options);\n      return iosBuilder.command();\n    });\n\n  program\n    .command('build:android [project-dir]')\n    .alias('ba')\n    // TODO: add this option back once we have a better way to download credentials.\n    // For now, just handle this manually for people.\n    //.option('-c, --clear-credentials', 'Clear stored credentials.')\n    .description(\n      'Build a standalone APK for your project, signed and ready for submission to the Google Play Store.'\n    )\n    .allowNonInteractive()\n    .asyncActionProjectDir((projectDir, options) => {\n      const androidBuilder = new AndroidBuilder(projectDir, options);\n      return androidBuilder.command();\n    });\n\n  program\n    .command('build:status [project-dir]')\n    .alias('bs')\n    .description(\n      `Gets the status of a current (or most recently finished) build for your project.`\n    )\n    .allowNonInteractive()\n    .asyncActionProjectDir(async (projectDir, options) => {\n      const builder = new BaseBuilder(projectDir, options);\n      try {\n        return await builder.checkStatus(false);\n      } catch (e) {\n        if (e instanceof BuildError) {\n          return;\n        }\n        throw e;\n      }\n    });\n};\n"],"sourceRoot":"/Users/jesseruder/exponent/universe/dev/exp/src"}