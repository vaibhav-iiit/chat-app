{"version":3,"sources":["commands/publish.js"],"names":["projectDir","options","currentStatus","status","startedOurOwn","startAsync","quiet","getRecipient","sendTo","recipient","start","publishAsync","result","stop","underline","url","raw","sendUrlAsync","stopAsync","action","program","command","alias","description","option","allowNonInteractive","asyncActionProjectDir"],"mappings":";;;;;;;;;;;;;;;;;;;;8HAkBO,iBAAsBA,UAAtB;AAAA,QAA0CC,OAA1C,uEAA6D,EAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACgB,8BAAQC,aAAR,CAAsBF,UAAtB,CADhB;;AAAA;AACCG,kBADD;AAGDC,yBAHC,GAGe,KAHf;;AAAA,kBAIDD,WAAW,SAJV;AAAA;AAAA;AAAA;;AAKH,+CACE,mFADF;AAGA,0DAAiBH,UAAjB;AARG;AAAA,mBASG,8BAAQK,UAAR,CAAmBL,UAAnB,EAA+B,EAA/B,EAAmC,CAACC,QAAQK,KAA5C,CATH;;AAAA;AAUHF,4BAAgB,IAAhB;;AAVG;AAAA;AAAA,mBAaiB,oCAAOG,YAAP,CAAoBN,QAAQO,MAA5B,CAbjB;;AAAA;AAaDC,qBAbC;;AAcL,+CAAI,eAAJ;;AAEA,gBAAIR,QAAQK,KAAZ,EAAmB;AACjB,gEAAcI,KAAd;AACD;;AAlBI;AAAA,mBAoBc,8BAAQC,YAAR,CAAqBX,UAArB,CApBd;;AAAA;AAoBDY,kBApBC;;;AAsBL,gBAAIX,QAAQK,KAAZ,EAAmB;AACjB,gEAAcO,IAAd;AACD;;AAED,+CAAI,WAAJ;AACA,+CAAI,oBAAoB,oCAAOC,SAAP,CAAiBF,OAAOG,GAAxB,CAApB,GAAmD,IAAvD;AACA,0CAAIC,GAAJ,CAAQJ,OAAOG,GAAf;;AA5BK,iBA8BDN,SA9BC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBA+BG,oCAAOQ,YAAP,CAAoBL,OAAOG,GAA3B,EAAgCN,SAAhC,CA/BH;;AAAA;AAAA,iBAkCDL,aAlCC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAmCG,8BAAQc,SAAR,CAAkBlB,UAAlB,CAnCH;;AAAA;AAAA,6CAsCEY,MAtCF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeO,M;;;;;;;AAdtB;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;AAEA;AAAA;AAAA;;;;AAEA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;kBAgDe,UAACC,OAAD,EAAkB;AAC/BA,UACGC,OADH,CACW,uBADX,EAEGC,KAFH,CAES,GAFT,EAGGC,WAHH,CAGe,oCAHf,EAIGC,MAJH,CAKI,aALJ,EAMI,yDANJ,EAQGA,MARH,CASI,sBATJ,EAUI,oDAVJ,EAYGC,mBAZH,GAaGC,qBAbH,CAayBP,MAbzB;AAcD,C","file":"../../commands/publish.js","sourcesContent":["/**\n * @flow\n */\n\nimport crayon from '@ccheever/crayon';\nimport simpleSpinner from '@exponent/simple-spinner';\n\nimport { Project } from 'xdl';\n\nimport log from '../log';\nimport sendTo from '../sendTo';\nimport { installExitHooks } from '../exit';\n\ntype Options = {\n  sendTo?: string,\n  quiet?: boolean,\n};\n\nexport async function action(projectDir: string, options: Options = {}) {\n  const status = await Project.currentStatus(projectDir);\n\n  let startedOurOwn = false;\n  if (status !== 'running') {\n    log(\n      'Unable to find an existing exp instance for this directory, starting a new one...'\n    );\n    installExitHooks(projectDir);\n    await Project.startAsync(projectDir, {}, !options.quiet);\n    startedOurOwn = true;\n  }\n\n  let recipient = await sendTo.getRecipient(options.sendTo);\n  log('Publishing...');\n\n  if (options.quiet) {\n    simpleSpinner.start();\n  }\n\n  let result = await Project.publishAsync(projectDir);\n\n  if (options.quiet) {\n    simpleSpinner.stop();\n  }\n\n  log('Published');\n  log('Your URL is\\n\\n' + crayon.underline(result.url) + '\\n');\n  log.raw(result.url);\n\n  if (recipient) {\n    await sendTo.sendUrlAsync(result.url, recipient);\n  }\n\n  if (startedOurOwn) {\n    await Project.stopAsync(projectDir);\n  }\n\n  return result;\n}\n\nexport default (program: any) => {\n  program\n    .command('publish [project-dir]')\n    .alias('p')\n    .description('Publishes your project to exp.host')\n    .option(\n      '-q, --quiet',\n      'Suppress verbose output from the React Native packager.'\n    )\n    .option(\n      '-s, --send-to [dest]',\n      'A phone number or e-mail address to send a link to'\n    )\n    .allowNonInteractive()\n    .asyncActionProjectDir(action);\n};\n"],"sourceRoot":"/Users/jesseruder/exponent/universe/dev/exp/src"}