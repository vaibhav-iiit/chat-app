{"version":3,"sources":["commands/send.js"],"names":["projectDir","options","optsAsync","constructManifestUrlAsync","url","printQRCode","underline","raw","shouldQuit","handleMobileOptsAsync","sendTo","recipient","getAsync","askForSendToAsync","sendUrlAsync","gray","process","exit","action","program","command","description","option","urlOpts","allowNonInteractive","asyncActionProjectDir"],"mappings":";;;;;;;;;;;;;;;;;;;8HASA,iBAAsBA,UAAtB,EAAkCC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQ,sCAAQC,SAAR,CAAkBF,UAAlB,EAA8BC,OAA9B,CADR;;AAAA;AAAA;AAAA,mBAGkB,+BAASE,yBAAT,CAAmCH,UAAnC,CAHlB;;AAAA;AAGMI,eAHN;;;AAKE,+CAAI,8BAAJ;AACA,kDAAQC,WAAR,CAAoBD,GAApB;;AAEA,+CAAI,oBAAoB,oCAAOE,SAAP,CAAiBF,GAAjB,CAApB,GAA4C,IAAhD;AACA,0CAAIG,GAAJ,CAAQH,GAAR;;AAEII,sBAXN,GAWmB,KAXnB;AAAA;AAAA,mBAYY,sCAAQC,qBAAR,CAA8BT,UAA9B,EAA0CC,OAA1C,CAZZ;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAaIO,yBAAa,IAAb;;AAbJ;AAAA,iBAgBMA,UAhBN;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,kBAqBM,OAAOP,QAAQS,MAAf,KAA0B,SArBhC;AAAA;AAAA;AAAA;;AAsBIC,wBAAYV,QAAQS,MAApB;AAtBJ;AAAA;;AAAA;AAAA;AAAA,mBAwBsB,mCAAaE,QAAb,CAAsB,QAAtB,EAAgC,IAAhC,CAxBtB;;AAAA;AAwBID,qBAxBJ;;AAAA;AAAA,gBA2BOA,SA3BP;AAAA;AAAA;AAAA;;AAAA;AAAA,mBA4BsB,sCAAQE,iBAAR,EA5BtB;;AAAA;AA4BIF,qBA5BJ;;AAAA;AAAA,iBA+BMA,SA/BN;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAgCU,oCAAOG,YAAP,CAAoBV,GAApB,EAAyBO,SAAzB,CAhCV;;AAAA;AAAA;AAAA;;AAAA;AAkCI,0CAAII,IAAJ,CAAS,gEAAT;;AAlCJ;;AAqCEC,oBAAQC,IAAR;;AArCF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeC,M;;;;;;;AATf;AAAA;AAAA;;;;AAEA;AAAA;AAAA;;;;AAEA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;AACA;AAAA;AAAA;;;;kBA0Ce,mBAAW;AACxBC,UACGC,OADH,CACW,oBADX,EAEGC,WAFH,CAGI,kEAHJ;AAKE;AALF,GAMGC,MANH,CAOI,uBAPJ,EAQI,mEARJ,EAUGC,OAVH,GAWGC,mBAXH,GAYGC,qBAZH,CAYyBP,MAZzB;AAaD,C","file":"../../commands/send.js","sourcesContent":["import crayon from '@ccheever/crayon';\n\nimport { UserSettings, UrlUtils } from 'xdl';\n\nimport askUser from '../askUser';\nimport log from '../log';\nimport sendTo from '../sendTo';\nimport urlOpts from '../urlOpts';\n\nasync function action(projectDir, options) {\n  await urlOpts.optsAsync(projectDir, options);\n\n  let url = await UrlUtils.constructManifestUrlAsync(projectDir);\n\n  log('You can scan this QR code:\\n');\n  urlOpts.printQRCode(url);\n\n  log('Your URL is\\n\\n' + crayon.underline(url) + '\\n');\n  log.raw(url);\n\n  let shouldQuit = false;\n  if (await urlOpts.handleMobileOptsAsync(projectDir, options)) {\n    shouldQuit = true;\n  }\n\n  if (shouldQuit) {\n    return;\n  }\n\n  var recipient;\n  if (typeof options.sendTo !== 'boolean') {\n    recipient = options.sendTo;\n  } else {\n    recipient = await UserSettings.getAsync('sendTo', null);\n  }\n\n  if (!recipient) {\n    recipient = await askUser.askForSendToAsync();\n  }\n\n  if (recipient) {\n    await sendTo.sendUrlAsync(url, recipient);\n  } else {\n    log.gray(\"(Not sending anything because you didn't specify a recipient.)\");\n  }\n\n  process.exit();\n}\n\nexport default program => {\n  program\n    .command('send [project-dir]')\n    .description(\n      'Sends a link to your project to a phone number or e-mail address'\n    )\n    //.help('You must have the server running for this command to work')\n    .option(\n      '-s, --send-to  [dest]',\n      'Specifies the mobile number or e-mail address to send this URL to'\n    )\n    .urlOpts()\n    .allowNonInteractive()\n    .asyncActionProjectDir(action);\n};\n"],"sourceRoot":"/Users/jesseruder/exponent/universe/dev/exp/src"}